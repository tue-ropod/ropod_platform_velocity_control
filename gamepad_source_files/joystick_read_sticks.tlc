%% File : joystick_read_sticks.tlc
%% Created : Tue Jul 16 15:43:34 2019
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "joystick_read_sticks.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  joystick_read_sticks "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs

    #ifdef __cplusplus
    extern "C" {
    #endif

    extern void joystick_read_sticks_Start_wrapper(void);

    extern void joystick_read_sticks_Outputs_wrapper(real_T *button,
			real_T *outX1,
			real_T *outY1,
			real_T *outX2,
			real_T *outY2);

    extern void joystick_read_sticks_Terminate_wrapper(void);

    #ifdef __cplusplus
    }
    #endif
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Start =============================================================
%%
%function Start(block, system) Output
   /* %<Type> Block: %<Name> */
  joystick_read_sticks_Start_wrapper();
%endfunction
%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  %assign py3 = LibBlockOutputSignalAddr(3, "", "", 0)
  %assign py4 = LibBlockOutputSignalAddr(4, "", "", 0)
  %assign py_width = LibBlockOutputSignalWidth(0)
  joystick_read_sticks_Outputs_wrapper(%<py0>, %<py1>, %<py2>, %<py3>, %<py4>);
  %%
%endfunction



%% [EOF] joystick_read_sticks.tlc

